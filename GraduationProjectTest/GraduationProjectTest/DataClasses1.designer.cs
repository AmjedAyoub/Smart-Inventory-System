#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GraduationProjectTest
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBilling(Billing instance);
    partial void UpdateBilling(Billing instance);
    partial void DeleteBilling(Billing instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertDelivery(Delivery instance);
    partial void UpdateDelivery(Delivery instance);
    partial void DeleteDelivery(Delivery instance);
    partial void InsertDestroy_list(Destroy_list instance);
    partial void UpdateDestroy_list(Destroy_list instance);
    partial void DeleteDestroy_list(Destroy_list instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertOffer(Offer instance);
    partial void UpdateOffer(Offer instance);
    partial void DeleteOffer(Offer instance);
    partial void InsertSale(Sale instance);
    partial void UpdateSale(Sale instance);
    partial void DeleteSale(Sale instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::GraduationProjectTest.Properties.Settings.Default.Database1ConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Billing> Billings
		{
			get
			{
				return this.GetTable<Billing>();
			}
		}
		
		public System.Data.Linq.Table<Buy> Buys
		{
			get
			{
				return this.GetTable<Buy>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Delivery> Deliveries
		{
			get
			{
				return this.GetTable<Delivery>();
			}
		}
		
		public System.Data.Linq.Table<deliverydetail> deliverydetails
		{
			get
			{
				return this.GetTable<deliverydetail>();
			}
		}
		
		public System.Data.Linq.Table<Destroy_list> Destroy_lists
		{
			get
			{
				return this.GetTable<Destroy_list>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<Login> Logins
		{
			get
			{
				return this.GetTable<Login>();
			}
		}
		
		public System.Data.Linq.Table<Offer> Offers
		{
			get
			{
				return this.GetTable<Offer>();
			}
		}
		
		public System.Data.Linq.Table<Return> Returns
		{
			get
			{
				return this.GetTable<Return>();
			}
		}
		
		public System.Data.Linq.Table<Sale> Sales
		{
			get
			{
				return this.GetTable<Sale>();
			}
		}
		
		public System.Data.Linq.Table<Visa> Visas
		{
			get
			{
				return this.GetTable<Visa>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Billing")]
	public partial class Billing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _B_ID;
		
		private System.Nullable<System.DateTime> _B_Date;
		
		private System.Nullable<System.TimeSpan> _B_Time;
		
		private string _B_Netamount;
		
		private string _B_Discount;
		
		private string _B_Addedtax;
		
		private string _Delivery;
		
		private System.Nullable<int> _C_ID;
		
		private string _C_FirstName;
		
		private string _C_LastName;
		
		private string _C_Num;
		
		private string _C_Address;
		
		private System.Nullable<int> _I_ID;
		
		private System.Nullable<double> _I_Sellingprice;
		
		private string _I_Name;
		
		private string _I_Price;
		
		private string _I_Quantity;
		
		private string _I_Cashier;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnB_IDChanging(int value);
    partial void OnB_IDChanged();
    partial void OnB_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnB_DateChanged();
    partial void OnB_TimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnB_TimeChanged();
    partial void OnB_NetamountChanging(string value);
    partial void OnB_NetamountChanged();
    partial void OnB_DiscountChanging(string value);
    partial void OnB_DiscountChanged();
    partial void OnB_AddedtaxChanging(string value);
    partial void OnB_AddedtaxChanged();
    partial void OnDeliveryChanging(string value);
    partial void OnDeliveryChanged();
    partial void OnC_IDChanging(System.Nullable<int> value);
    partial void OnC_IDChanged();
    partial void OnC_FirstNameChanging(string value);
    partial void OnC_FirstNameChanged();
    partial void OnC_LastNameChanging(string value);
    partial void OnC_LastNameChanged();
    partial void OnC_NumChanging(string value);
    partial void OnC_NumChanged();
    partial void OnC_AddressChanging(string value);
    partial void OnC_AddressChanged();
    partial void OnI_IDChanging(System.Nullable<int> value);
    partial void OnI_IDChanged();
    partial void OnI_SellingpriceChanging(System.Nullable<double> value);
    partial void OnI_SellingpriceChanged();
    partial void OnI_NameChanging(string value);
    partial void OnI_NameChanged();
    partial void OnI_PriceChanging(string value);
    partial void OnI_PriceChanged();
    partial void OnI_QuantityChanging(string value);
    partial void OnI_QuantityChanged();
    partial void OnI_CashierChanging(string value);
    partial void OnI_CashierChanged();
    #endregion
		
		public Billing()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int B_ID
		{
			get
			{
				return this._B_ID;
			}
			set
			{
				if ((this._B_ID != value))
				{
					this.OnB_IDChanging(value);
					this.SendPropertyChanging();
					this._B_ID = value;
					this.SendPropertyChanged("B_ID");
					this.OnB_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_Date", DbType="Date")]
		public System.Nullable<System.DateTime> B_Date
		{
			get
			{
				return this._B_Date;
			}
			set
			{
				if ((this._B_Date != value))
				{
					this.OnB_DateChanging(value);
					this.SendPropertyChanging();
					this._B_Date = value;
					this.SendPropertyChanged("B_Date");
					this.OnB_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_Time", DbType="Time")]
		public System.Nullable<System.TimeSpan> B_Time
		{
			get
			{
				return this._B_Time;
			}
			set
			{
				if ((this._B_Time != value))
				{
					this.OnB_TimeChanging(value);
					this.SendPropertyChanging();
					this._B_Time = value;
					this.SendPropertyChanged("B_Time");
					this.OnB_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_Netamount", DbType="NVarChar(50)")]
		public string B_Netamount
		{
			get
			{
				return this._B_Netamount;
			}
			set
			{
				if ((this._B_Netamount != value))
				{
					this.OnB_NetamountChanging(value);
					this.SendPropertyChanging();
					this._B_Netamount = value;
					this.SendPropertyChanged("B_Netamount");
					this.OnB_NetamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_Discount", DbType="NVarChar(50)")]
		public string B_Discount
		{
			get
			{
				return this._B_Discount;
			}
			set
			{
				if ((this._B_Discount != value))
				{
					this.OnB_DiscountChanging(value);
					this.SendPropertyChanging();
					this._B_Discount = value;
					this.SendPropertyChanged("B_Discount");
					this.OnB_DiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_Addedtax", DbType="NVarChar(50)")]
		public string B_Addedtax
		{
			get
			{
				return this._B_Addedtax;
			}
			set
			{
				if ((this._B_Addedtax != value))
				{
					this.OnB_AddedtaxChanging(value);
					this.SendPropertyChanging();
					this._B_Addedtax = value;
					this.SendPropertyChanged("B_Addedtax");
					this.OnB_AddedtaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delivery", DbType="VarChar(50)")]
		public string Delivery
		{
			get
			{
				return this._Delivery;
			}
			set
			{
				if ((this._Delivery != value))
				{
					this.OnDeliveryChanging(value);
					this.SendPropertyChanging();
					this._Delivery = value;
					this.SendPropertyChanged("Delivery");
					this.OnDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_ID", DbType="Int")]
		public System.Nullable<int> C_ID
		{
			get
			{
				return this._C_ID;
			}
			set
			{
				if ((this._C_ID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnC_IDChanging(value);
					this.SendPropertyChanging();
					this._C_ID = value;
					this.SendPropertyChanged("C_ID");
					this.OnC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_FirstName", DbType="VarChar(50)")]
		public string C_FirstName
		{
			get
			{
				return this._C_FirstName;
			}
			set
			{
				if ((this._C_FirstName != value))
				{
					this.OnC_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._C_FirstName = value;
					this.SendPropertyChanged("C_FirstName");
					this.OnC_FirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_LastName", DbType="VarChar(50)")]
		public string C_LastName
		{
			get
			{
				return this._C_LastName;
			}
			set
			{
				if ((this._C_LastName != value))
				{
					this.OnC_LastNameChanging(value);
					this.SendPropertyChanging();
					this._C_LastName = value;
					this.SendPropertyChanged("C_LastName");
					this.OnC_LastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_Num", DbType="VarChar(50)")]
		public string C_Num
		{
			get
			{
				return this._C_Num;
			}
			set
			{
				if ((this._C_Num != value))
				{
					this.OnC_NumChanging(value);
					this.SendPropertyChanging();
					this._C_Num = value;
					this.SendPropertyChanged("C_Num");
					this.OnC_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_Address", DbType="VarChar(MAX)")]
		public string C_Address
		{
			get
			{
				return this._C_Address;
			}
			set
			{
				if ((this._C_Address != value))
				{
					this.OnC_AddressChanging(value);
					this.SendPropertyChanging();
					this._C_Address = value;
					this.SendPropertyChanged("C_Address");
					this.OnC_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_ID", DbType="Int")]
		public System.Nullable<int> I_ID
		{
			get
			{
				return this._I_ID;
			}
			set
			{
				if ((this._I_ID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnI_IDChanging(value);
					this.SendPropertyChanging();
					this._I_ID = value;
					this.SendPropertyChanged("I_ID");
					this.OnI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Sellingprice", DbType="Float")]
		public System.Nullable<double> I_Sellingprice
		{
			get
			{
				return this._I_Sellingprice;
			}
			set
			{
				if ((this._I_Sellingprice != value))
				{
					this.OnI_SellingpriceChanging(value);
					this.SendPropertyChanging();
					this._I_Sellingprice = value;
					this.SendPropertyChanged("I_Sellingprice");
					this.OnI_SellingpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Name", DbType="VarChar(MAX)")]
		public string I_Name
		{
			get
			{
				return this._I_Name;
			}
			set
			{
				if ((this._I_Name != value))
				{
					this.OnI_NameChanging(value);
					this.SendPropertyChanging();
					this._I_Name = value;
					this.SendPropertyChanged("I_Name");
					this.OnI_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Price", DbType="VarChar(50)")]
		public string I_Price
		{
			get
			{
				return this._I_Price;
			}
			set
			{
				if ((this._I_Price != value))
				{
					this.OnI_PriceChanging(value);
					this.SendPropertyChanging();
					this._I_Price = value;
					this.SendPropertyChanged("I_Price");
					this.OnI_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Quantity", DbType="VarChar(50)")]
		public string I_Quantity
		{
			get
			{
				return this._I_Quantity;
			}
			set
			{
				if ((this._I_Quantity != value))
				{
					this.OnI_QuantityChanging(value);
					this.SendPropertyChanging();
					this._I_Quantity = value;
					this.SendPropertyChanged("I_Quantity");
					this.OnI_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Cashier", DbType="VarChar(50)")]
		public string I_Cashier
		{
			get
			{
				return this._I_Cashier;
			}
			set
			{
				if ((this._I_Cashier != value))
				{
					this.OnI_CashierChanging(value);
					this.SendPropertyChanging();
					this._I_Cashier = value;
					this.SendPropertyChanged("I_Cashier");
					this.OnI_CashierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Billing", Storage="_Customer", ThisKey="C_ID", OtherKey="C_ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Billings.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Billings.Add(this);
						this._C_ID = value.C_ID;
					}
					else
					{
						this._C_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Billing", Storage="_Item", ThisKey="I_ID", OtherKey="I_ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.Billings.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.Billings.Add(this);
						this._I_ID = value.I_ID;
					}
					else
					{
						this._I_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buy")]
	public partial class Buy
	{
		
		private System.Nullable<int> _I_ID;
		
		private string _I_Name;
		
		private System.Nullable<double> _I_Quantity;
		
		private System.Nullable<double> _Buy_Price;
		
		private System.Nullable<System.DateTime> _B_date;
		
		public Buy()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_ID", DbType="Int")]
		public System.Nullable<int> I_ID
		{
			get
			{
				return this._I_ID;
			}
			set
			{
				if ((this._I_ID != value))
				{
					this._I_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Name", DbType="VarChar(50)")]
		public string I_Name
		{
			get
			{
				return this._I_Name;
			}
			set
			{
				if ((this._I_Name != value))
				{
					this._I_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Quantity", DbType="Float")]
		public System.Nullable<double> I_Quantity
		{
			get
			{
				return this._I_Quantity;
			}
			set
			{
				if ((this._I_Quantity != value))
				{
					this._I_Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Buy_Price", DbType="Float")]
		public System.Nullable<double> Buy_Price
		{
			get
			{
				return this._Buy_Price;
			}
			set
			{
				if ((this._Buy_Price != value))
				{
					this._Buy_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_date", DbType="Date")]
		public System.Nullable<System.DateTime> B_date
		{
			get
			{
				return this._B_date;
			}
			set
			{
				if ((this._B_date != value))
				{
					this._B_date = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Com_ID;
		
		private string _Com_Name;
		
		private System.Nullable<int> _I_ID;
		
		private string _I_Name;
		
		private System.Nullable<double> _I_Price;
		
		private System.Nullable<double> _I_Tax;
		
		private EntitySet<Item> _Items;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCom_IDChanging(int value);
    partial void OnCom_IDChanged();
    partial void OnCom_NameChanging(string value);
    partial void OnCom_NameChanged();
    partial void OnI_IDChanging(System.Nullable<int> value);
    partial void OnI_IDChanged();
    partial void OnI_NameChanging(string value);
    partial void OnI_NameChanged();
    partial void OnI_PriceChanging(System.Nullable<double> value);
    partial void OnI_PriceChanged();
    partial void OnI_TaxChanging(System.Nullable<double> value);
    partial void OnI_TaxChanged();
    #endregion
		
		public Company()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Com_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Com_ID
		{
			get
			{
				return this._Com_ID;
			}
			set
			{
				if ((this._Com_ID != value))
				{
					this.OnCom_IDChanging(value);
					this.SendPropertyChanging();
					this._Com_ID = value;
					this.SendPropertyChanged("Com_ID");
					this.OnCom_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Com_Name", DbType="VarChar(50)")]
		public string Com_Name
		{
			get
			{
				return this._Com_Name;
			}
			set
			{
				if ((this._Com_Name != value))
				{
					this.OnCom_NameChanging(value);
					this.SendPropertyChanging();
					this._Com_Name = value;
					this.SendPropertyChanged("Com_Name");
					this.OnCom_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_ID", DbType="Int")]
		public System.Nullable<int> I_ID
		{
			get
			{
				return this._I_ID;
			}
			set
			{
				if ((this._I_ID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnI_IDChanging(value);
					this.SendPropertyChanging();
					this._I_ID = value;
					this.SendPropertyChanged("I_ID");
					this.OnI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Name", DbType="VarChar(50)")]
		public string I_Name
		{
			get
			{
				return this._I_Name;
			}
			set
			{
				if ((this._I_Name != value))
				{
					this.OnI_NameChanging(value);
					this.SendPropertyChanging();
					this._I_Name = value;
					this.SendPropertyChanged("I_Name");
					this.OnI_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Price", DbType="Float")]
		public System.Nullable<double> I_Price
		{
			get
			{
				return this._I_Price;
			}
			set
			{
				if ((this._I_Price != value))
				{
					this.OnI_PriceChanging(value);
					this.SendPropertyChanging();
					this._I_Price = value;
					this.SendPropertyChanged("I_Price");
					this.OnI_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Tax", DbType="Float")]
		public System.Nullable<double> I_Tax
		{
			get
			{
				return this._I_Tax;
			}
			set
			{
				if ((this._I_Tax != value))
				{
					this.OnI_TaxChanging(value);
					this.SendPropertyChanging();
					this._I_Tax = value;
					this.SendPropertyChanged("I_Tax");
					this.OnI_TaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Item", Storage="_Items", ThisKey="Com_ID", OtherKey="Com_ID")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Company", Storage="_Item", ThisKey="I_ID", OtherKey="I_ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.Companies.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.Companies.Add(this);
						this._I_ID = value.I_ID;
					}
					else
					{
						this._I_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _C_ID;
		
		private string _C_FirstName;
		
		private string _C_LastName;
		
		private string _C_Email;
		
		private string _C_Contactnumber;
		
		private string _C_City;
		
		private string _C_Stname;
		
		private string _C_Bildingnum;
		
		private string _C_Floor;
		
		private string _C_Apartment;
		
		private EntitySet<Billing> _Billings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_IDChanging(int value);
    partial void OnC_IDChanged();
    partial void OnC_FirstNameChanging(string value);
    partial void OnC_FirstNameChanged();
    partial void OnC_LastNameChanging(string value);
    partial void OnC_LastNameChanged();
    partial void OnC_EmailChanging(string value);
    partial void OnC_EmailChanged();
    partial void OnC_ContactnumberChanging(string value);
    partial void OnC_ContactnumberChanged();
    partial void OnC_CityChanging(string value);
    partial void OnC_CityChanged();
    partial void OnC_StnameChanging(string value);
    partial void OnC_StnameChanged();
    partial void OnC_BildingnumChanging(string value);
    partial void OnC_BildingnumChanged();
    partial void OnC_FloorChanging(string value);
    partial void OnC_FloorChanged();
    partial void OnC_ApartmentChanging(string value);
    partial void OnC_ApartmentChanged();
    #endregion
		
		public Customer()
		{
			this._Billings = new EntitySet<Billing>(new Action<Billing>(this.attach_Billings), new Action<Billing>(this.detach_Billings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int C_ID
		{
			get
			{
				return this._C_ID;
			}
			set
			{
				if ((this._C_ID != value))
				{
					this.OnC_IDChanging(value);
					this.SendPropertyChanging();
					this._C_ID = value;
					this.SendPropertyChanged("C_ID");
					this.OnC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_FirstName", DbType="VarChar(50)")]
		public string C_FirstName
		{
			get
			{
				return this._C_FirstName;
			}
			set
			{
				if ((this._C_FirstName != value))
				{
					this.OnC_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._C_FirstName = value;
					this.SendPropertyChanged("C_FirstName");
					this.OnC_FirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_LastName", DbType="VarChar(50)")]
		public string C_LastName
		{
			get
			{
				return this._C_LastName;
			}
			set
			{
				if ((this._C_LastName != value))
				{
					this.OnC_LastNameChanging(value);
					this.SendPropertyChanging();
					this._C_LastName = value;
					this.SendPropertyChanged("C_LastName");
					this.OnC_LastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_Email", DbType="VarChar(50)")]
		public string C_Email
		{
			get
			{
				return this._C_Email;
			}
			set
			{
				if ((this._C_Email != value))
				{
					this.OnC_EmailChanging(value);
					this.SendPropertyChanging();
					this._C_Email = value;
					this.SendPropertyChanged("C_Email");
					this.OnC_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_Contactnumber", DbType="VarChar(50)")]
		public string C_Contactnumber
		{
			get
			{
				return this._C_Contactnumber;
			}
			set
			{
				if ((this._C_Contactnumber != value))
				{
					this.OnC_ContactnumberChanging(value);
					this.SendPropertyChanging();
					this._C_Contactnumber = value;
					this.SendPropertyChanged("C_Contactnumber");
					this.OnC_ContactnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_City", DbType="VarChar(50)")]
		public string C_City
		{
			get
			{
				return this._C_City;
			}
			set
			{
				if ((this._C_City != value))
				{
					this.OnC_CityChanging(value);
					this.SendPropertyChanging();
					this._C_City = value;
					this.SendPropertyChanged("C_City");
					this.OnC_CityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_Stname", DbType="VarChar(50)")]
		public string C_Stname
		{
			get
			{
				return this._C_Stname;
			}
			set
			{
				if ((this._C_Stname != value))
				{
					this.OnC_StnameChanging(value);
					this.SendPropertyChanging();
					this._C_Stname = value;
					this.SendPropertyChanged("C_Stname");
					this.OnC_StnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_Bildingnum", DbType="VarChar(50)")]
		public string C_Bildingnum
		{
			get
			{
				return this._C_Bildingnum;
			}
			set
			{
				if ((this._C_Bildingnum != value))
				{
					this.OnC_BildingnumChanging(value);
					this.SendPropertyChanging();
					this._C_Bildingnum = value;
					this.SendPropertyChanged("C_Bildingnum");
					this.OnC_BildingnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_Floor", DbType="VarChar(50)")]
		public string C_Floor
		{
			get
			{
				return this._C_Floor;
			}
			set
			{
				if ((this._C_Floor != value))
				{
					this.OnC_FloorChanging(value);
					this.SendPropertyChanging();
					this._C_Floor = value;
					this.SendPropertyChanged("C_Floor");
					this.OnC_FloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_Apartment", DbType="VarChar(50)")]
		public string C_Apartment
		{
			get
			{
				return this._C_Apartment;
			}
			set
			{
				if ((this._C_Apartment != value))
				{
					this.OnC_ApartmentChanging(value);
					this.SendPropertyChanging();
					this._C_Apartment = value;
					this.SendPropertyChanged("C_Apartment");
					this.OnC_ApartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Billing", Storage="_Billings", ThisKey="C_ID", OtherKey="C_ID")]
		public EntitySet<Billing> Billings
		{
			get
			{
				return this._Billings;
			}
			set
			{
				this._Billings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Billings(Billing entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Billings(Billing entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Delivery")]
	public partial class Delivery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _D_ID;
		
		private string _Drivername;
		
		private string _C_address;
		
		private System.Nullable<double> _D_amount;
		
		private System.Nullable<System.DateTime> _D_Date;
		
		private string _D_time;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnD_IDChanging(int value);
    partial void OnD_IDChanged();
    partial void OnDrivernameChanging(string value);
    partial void OnDrivernameChanged();
    partial void OnC_addressChanging(string value);
    partial void OnC_addressChanged();
    partial void OnD_amountChanging(System.Nullable<double> value);
    partial void OnD_amountChanged();
    partial void OnD_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnD_DateChanged();
    partial void OnD_timeChanging(string value);
    partial void OnD_timeChanged();
    #endregion
		
		public Delivery()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int D_ID
		{
			get
			{
				return this._D_ID;
			}
			set
			{
				if ((this._D_ID != value))
				{
					this.OnD_IDChanging(value);
					this.SendPropertyChanging();
					this._D_ID = value;
					this.SendPropertyChanged("D_ID");
					this.OnD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Drivername", DbType="VarChar(50)")]
		public string Drivername
		{
			get
			{
				return this._Drivername;
			}
			set
			{
				if ((this._Drivername != value))
				{
					this.OnDrivernameChanging(value);
					this.SendPropertyChanging();
					this._Drivername = value;
					this.SendPropertyChanged("Drivername");
					this.OnDrivernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_address", DbType="VarChar(MAX)")]
		public string C_address
		{
			get
			{
				return this._C_address;
			}
			set
			{
				if ((this._C_address != value))
				{
					this.OnC_addressChanging(value);
					this.SendPropertyChanging();
					this._C_address = value;
					this.SendPropertyChanged("C_address");
					this.OnC_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D_amount", DbType="Float")]
		public System.Nullable<double> D_amount
		{
			get
			{
				return this._D_amount;
			}
			set
			{
				if ((this._D_amount != value))
				{
					this.OnD_amountChanging(value);
					this.SendPropertyChanging();
					this._D_amount = value;
					this.SendPropertyChanged("D_amount");
					this.OnD_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D_Date", DbType="Date")]
		public System.Nullable<System.DateTime> D_Date
		{
			get
			{
				return this._D_Date;
			}
			set
			{
				if ((this._D_Date != value))
				{
					this.OnD_DateChanging(value);
					this.SendPropertyChanging();
					this._D_Date = value;
					this.SendPropertyChanged("D_Date");
					this.OnD_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D_time", DbType="VarChar(50)")]
		public string D_time
		{
			get
			{
				return this._D_time;
			}
			set
			{
				if ((this._D_time != value))
				{
					this.OnD_timeChanging(value);
					this.SendPropertyChanging();
					this._D_time = value;
					this.SendPropertyChanged("D_time");
					this.OnD_timeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.deliverydetails")]
	public partial class deliverydetail
	{
		
		private System.Nullable<int> _D_ID;
		
		private string _Drivername;
		
		private string _I_Name;
		
		private string _C_address;
		
		private System.Nullable<double> _I_Price;
		
		private System.Nullable<double> _I_Quantity;
		
		public deliverydetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D_ID", DbType="Int")]
		public System.Nullable<int> D_ID
		{
			get
			{
				return this._D_ID;
			}
			set
			{
				if ((this._D_ID != value))
				{
					this._D_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Drivername", DbType="VarChar(50)")]
		public string Drivername
		{
			get
			{
				return this._Drivername;
			}
			set
			{
				if ((this._Drivername != value))
				{
					this._Drivername = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Name", DbType="VarChar(50)")]
		public string I_Name
		{
			get
			{
				return this._I_Name;
			}
			set
			{
				if ((this._I_Name != value))
				{
					this._I_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_address", DbType="VarChar(MAX)")]
		public string C_address
		{
			get
			{
				return this._C_address;
			}
			set
			{
				if ((this._C_address != value))
				{
					this._C_address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Price", DbType="Float")]
		public System.Nullable<double> I_Price
		{
			get
			{
				return this._I_Price;
			}
			set
			{
				if ((this._I_Price != value))
				{
					this._I_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Quantity", DbType="Float")]
		public System.Nullable<double> I_Quantity
		{
			get
			{
				return this._I_Quantity;
			}
			set
			{
				if ((this._I_Quantity != value))
				{
					this._I_Quantity = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Destroy list]")]
	public partial class Destroy_list : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Des_ID;
		
		private System.Nullable<System.DateTime> _Des_Date;
		
		private string _I_Name;
		
		private System.Nullable<int> _I_ID;
		
		private System.Nullable<double> _I_Quantity;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDes_IDChanging(int value);
    partial void OnDes_IDChanged();
    partial void OnDes_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnDes_DateChanged();
    partial void OnI_NameChanging(string value);
    partial void OnI_NameChanged();
    partial void OnI_IDChanging(System.Nullable<int> value);
    partial void OnI_IDChanged();
    partial void OnI_QuantityChanging(System.Nullable<double> value);
    partial void OnI_QuantityChanged();
    #endregion
		
		public Destroy_list()
		{
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Des_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Des_ID
		{
			get
			{
				return this._Des_ID;
			}
			set
			{
				if ((this._Des_ID != value))
				{
					this.OnDes_IDChanging(value);
					this.SendPropertyChanging();
					this._Des_ID = value;
					this.SendPropertyChanged("Des_ID");
					this.OnDes_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Des_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Des_Date
		{
			get
			{
				return this._Des_Date;
			}
			set
			{
				if ((this._Des_Date != value))
				{
					this.OnDes_DateChanging(value);
					this.SendPropertyChanging();
					this._Des_Date = value;
					this.SendPropertyChanged("Des_Date");
					this.OnDes_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Name", DbType="VarChar(50)")]
		public string I_Name
		{
			get
			{
				return this._I_Name;
			}
			set
			{
				if ((this._I_Name != value))
				{
					this.OnI_NameChanging(value);
					this.SendPropertyChanging();
					this._I_Name = value;
					this.SendPropertyChanged("I_Name");
					this.OnI_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_ID", DbType="Int")]
		public System.Nullable<int> I_ID
		{
			get
			{
				return this._I_ID;
			}
			set
			{
				if ((this._I_ID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnI_IDChanging(value);
					this.SendPropertyChanging();
					this._I_ID = value;
					this.SendPropertyChanged("I_ID");
					this.OnI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Quantity", DbType="Float")]
		public System.Nullable<double> I_Quantity
		{
			get
			{
				return this._I_Quantity;
			}
			set
			{
				if ((this._I_Quantity != value))
				{
					this.OnI_QuantityChanging(value);
					this.SendPropertyChanging();
					this._I_Quantity = value;
					this.SendPropertyChanged("I_Quantity");
					this.OnI_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Destroy_list", Storage="_Item", ThisKey="I_ID", OtherKey="I_ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.Destroy_lists.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.Destroy_lists.Add(this);
						this._I_ID = value.I_ID;
					}
					else
					{
						this._I_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _E_ID;
		
		private string _E_Firstname;
		
		private string _E_Lastname;
		
		private System.Nullable<System.DateTime> _E_Hiredate;
		
		private string _E_Email;
		
		private string _E_Contactnum;
		
		private string _E_Job;
		
		private System.Nullable<double> _E_Sallary;
		
		private System.Nullable<double> _E_Drop;
		
		private System.Nullable<double> _E_Workshours;
		
		private string _E_Username;
		
		private string _E_Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnE_IDChanging(int value);
    partial void OnE_IDChanged();
    partial void OnE_FirstnameChanging(string value);
    partial void OnE_FirstnameChanged();
    partial void OnE_LastnameChanging(string value);
    partial void OnE_LastnameChanged();
    partial void OnE_HiredateChanging(System.Nullable<System.DateTime> value);
    partial void OnE_HiredateChanged();
    partial void OnE_EmailChanging(string value);
    partial void OnE_EmailChanged();
    partial void OnE_ContactnumChanging(string value);
    partial void OnE_ContactnumChanged();
    partial void OnE_JobChanging(string value);
    partial void OnE_JobChanged();
    partial void OnE_SallaryChanging(System.Nullable<double> value);
    partial void OnE_SallaryChanged();
    partial void OnE_DropChanging(System.Nullable<double> value);
    partial void OnE_DropChanged();
    partial void OnE_WorkshoursChanging(System.Nullable<double> value);
    partial void OnE_WorkshoursChanged();
    partial void OnE_UsernameChanging(string value);
    partial void OnE_UsernameChanged();
    partial void OnE_PasswordChanging(string value);
    partial void OnE_PasswordChanged();
    #endregion
		
		public Employee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int E_ID
		{
			get
			{
				return this._E_ID;
			}
			set
			{
				if ((this._E_ID != value))
				{
					this.OnE_IDChanging(value);
					this.SendPropertyChanging();
					this._E_ID = value;
					this.SendPropertyChanged("E_ID");
					this.OnE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Firstname", DbType="VarChar(50)")]
		public string E_Firstname
		{
			get
			{
				return this._E_Firstname;
			}
			set
			{
				if ((this._E_Firstname != value))
				{
					this.OnE_FirstnameChanging(value);
					this.SendPropertyChanging();
					this._E_Firstname = value;
					this.SendPropertyChanged("E_Firstname");
					this.OnE_FirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Lastname", DbType="VarChar(50)")]
		public string E_Lastname
		{
			get
			{
				return this._E_Lastname;
			}
			set
			{
				if ((this._E_Lastname != value))
				{
					this.OnE_LastnameChanging(value);
					this.SendPropertyChanging();
					this._E_Lastname = value;
					this.SendPropertyChanged("E_Lastname");
					this.OnE_LastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Hiredate", DbType="Date")]
		public System.Nullable<System.DateTime> E_Hiredate
		{
			get
			{
				return this._E_Hiredate;
			}
			set
			{
				if ((this._E_Hiredate != value))
				{
					this.OnE_HiredateChanging(value);
					this.SendPropertyChanging();
					this._E_Hiredate = value;
					this.SendPropertyChanged("E_Hiredate");
					this.OnE_HiredateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Email", DbType="VarChar(50)")]
		public string E_Email
		{
			get
			{
				return this._E_Email;
			}
			set
			{
				if ((this._E_Email != value))
				{
					this.OnE_EmailChanging(value);
					this.SendPropertyChanging();
					this._E_Email = value;
					this.SendPropertyChanged("E_Email");
					this.OnE_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Contactnum", DbType="VarChar(50)")]
		public string E_Contactnum
		{
			get
			{
				return this._E_Contactnum;
			}
			set
			{
				if ((this._E_Contactnum != value))
				{
					this.OnE_ContactnumChanging(value);
					this.SendPropertyChanging();
					this._E_Contactnum = value;
					this.SendPropertyChanged("E_Contactnum");
					this.OnE_ContactnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Job", DbType="VarChar(50)")]
		public string E_Job
		{
			get
			{
				return this._E_Job;
			}
			set
			{
				if ((this._E_Job != value))
				{
					this.OnE_JobChanging(value);
					this.SendPropertyChanging();
					this._E_Job = value;
					this.SendPropertyChanged("E_Job");
					this.OnE_JobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Sallary", DbType="Float")]
		public System.Nullable<double> E_Sallary
		{
			get
			{
				return this._E_Sallary;
			}
			set
			{
				if ((this._E_Sallary != value))
				{
					this.OnE_SallaryChanging(value);
					this.SendPropertyChanging();
					this._E_Sallary = value;
					this.SendPropertyChanged("E_Sallary");
					this.OnE_SallaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Drop", DbType="Float")]
		public System.Nullable<double> E_Drop
		{
			get
			{
				return this._E_Drop;
			}
			set
			{
				if ((this._E_Drop != value))
				{
					this.OnE_DropChanging(value);
					this.SendPropertyChanging();
					this._E_Drop = value;
					this.SendPropertyChanged("E_Drop");
					this.OnE_DropChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Workshours", DbType="Float")]
		public System.Nullable<double> E_Workshours
		{
			get
			{
				return this._E_Workshours;
			}
			set
			{
				if ((this._E_Workshours != value))
				{
					this.OnE_WorkshoursChanging(value);
					this.SendPropertyChanging();
					this._E_Workshours = value;
					this.SendPropertyChanged("E_Workshours");
					this.OnE_WorkshoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Username", DbType="VarChar(50)")]
		public string E_Username
		{
			get
			{
				return this._E_Username;
			}
			set
			{
				if ((this._E_Username != value))
				{
					this.OnE_UsernameChanging(value);
					this.SendPropertyChanging();
					this._E_Username = value;
					this.SendPropertyChanged("E_Username");
					this.OnE_UsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Password", DbType="VarChar(50)")]
		public string E_Password
		{
			get
			{
				return this._E_Password;
			}
			set
			{
				if ((this._E_Password != value))
				{
					this.OnE_PasswordChanging(value);
					this.SendPropertyChanging();
					this._E_Password = value;
					this.SendPropertyChanged("E_Password");
					this.OnE_PasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Items")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _I_ID;
		
		private string _I_Name;
		
		private System.Nullable<int> _Com_ID;
		
		private string _I_Company;
		
		private string _I_Type;
		
		private System.Nullable<double> _I_Quantity;
		
		private System.Nullable<System.DateTime> _I_Expirydate;
		
		private string _I_Unit;
		
		private System.Nullable<double> _I_Wholesaleprice;
		
		private System.Nullable<double> _I_Tax;
		
		private System.Nullable<double> _I_sellingprice;
		
		private System.Nullable<System.DateTime> _I_Date;
		
		private System.Data.Linq.Binary _I_Discription;
		
		private EntitySet<Billing> _Billings;
		
		private EntitySet<Company> _Companies;
		
		private EntitySet<Destroy_list> _Destroy_lists;
		
		private EntitySet<Offer> _Offers;
		
		private EntitySet<Sale> _Sales;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnI_IDChanging(int value);
    partial void OnI_IDChanged();
    partial void OnI_NameChanging(string value);
    partial void OnI_NameChanged();
    partial void OnCom_IDChanging(System.Nullable<int> value);
    partial void OnCom_IDChanged();
    partial void OnI_CompanyChanging(string value);
    partial void OnI_CompanyChanged();
    partial void OnI_TypeChanging(string value);
    partial void OnI_TypeChanged();
    partial void OnI_QuantityChanging(System.Nullable<double> value);
    partial void OnI_QuantityChanged();
    partial void OnI_ExpirydateChanging(System.Nullable<System.DateTime> value);
    partial void OnI_ExpirydateChanged();
    partial void OnI_UnitChanging(string value);
    partial void OnI_UnitChanged();
    partial void OnI_WholesalepriceChanging(System.Nullable<double> value);
    partial void OnI_WholesalepriceChanged();
    partial void OnI_TaxChanging(System.Nullable<double> value);
    partial void OnI_TaxChanged();
    partial void OnI_sellingpriceChanging(System.Nullable<double> value);
    partial void OnI_sellingpriceChanged();
    partial void OnI_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnI_DateChanged();
    partial void OnI_DiscriptionChanging(System.Data.Linq.Binary value);
    partial void OnI_DiscriptionChanged();
    #endregion
		
		public Item()
		{
			this._Billings = new EntitySet<Billing>(new Action<Billing>(this.attach_Billings), new Action<Billing>(this.detach_Billings));
			this._Companies = new EntitySet<Company>(new Action<Company>(this.attach_Companies), new Action<Company>(this.detach_Companies));
			this._Destroy_lists = new EntitySet<Destroy_list>(new Action<Destroy_list>(this.attach_Destroy_lists), new Action<Destroy_list>(this.detach_Destroy_lists));
			this._Offers = new EntitySet<Offer>(new Action<Offer>(this.attach_Offers), new Action<Offer>(this.detach_Offers));
			this._Sales = new EntitySet<Sale>(new Action<Sale>(this.attach_Sales), new Action<Sale>(this.detach_Sales));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int I_ID
		{
			get
			{
				return this._I_ID;
			}
			set
			{
				if ((this._I_ID != value))
				{
					this.OnI_IDChanging(value);
					this.SendPropertyChanging();
					this._I_ID = value;
					this.SendPropertyChanged("I_ID");
					this.OnI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Name", DbType="VarChar(50)")]
		public string I_Name
		{
			get
			{
				return this._I_Name;
			}
			set
			{
				if ((this._I_Name != value))
				{
					this.OnI_NameChanging(value);
					this.SendPropertyChanging();
					this._I_Name = value;
					this.SendPropertyChanged("I_Name");
					this.OnI_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Com_ID", DbType="Int")]
		public System.Nullable<int> Com_ID
		{
			get
			{
				return this._Com_ID;
			}
			set
			{
				if ((this._Com_ID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCom_IDChanging(value);
					this.SendPropertyChanging();
					this._Com_ID = value;
					this.SendPropertyChanged("Com_ID");
					this.OnCom_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Company", DbType="VarChar(50)")]
		public string I_Company
		{
			get
			{
				return this._I_Company;
			}
			set
			{
				if ((this._I_Company != value))
				{
					this.OnI_CompanyChanging(value);
					this.SendPropertyChanging();
					this._I_Company = value;
					this.SendPropertyChanged("I_Company");
					this.OnI_CompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Type", DbType="VarChar(50)")]
		public string I_Type
		{
			get
			{
				return this._I_Type;
			}
			set
			{
				if ((this._I_Type != value))
				{
					this.OnI_TypeChanging(value);
					this.SendPropertyChanging();
					this._I_Type = value;
					this.SendPropertyChanged("I_Type");
					this.OnI_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Quantity", DbType="Float")]
		public System.Nullable<double> I_Quantity
		{
			get
			{
				return this._I_Quantity;
			}
			set
			{
				if ((this._I_Quantity != value))
				{
					this.OnI_QuantityChanging(value);
					this.SendPropertyChanging();
					this._I_Quantity = value;
					this.SendPropertyChanged("I_Quantity");
					this.OnI_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Expirydate", DbType="Date")]
		public System.Nullable<System.DateTime> I_Expirydate
		{
			get
			{
				return this._I_Expirydate;
			}
			set
			{
				if ((this._I_Expirydate != value))
				{
					this.OnI_ExpirydateChanging(value);
					this.SendPropertyChanging();
					this._I_Expirydate = value;
					this.SendPropertyChanged("I_Expirydate");
					this.OnI_ExpirydateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Unit", DbType="VarChar(50)")]
		public string I_Unit
		{
			get
			{
				return this._I_Unit;
			}
			set
			{
				if ((this._I_Unit != value))
				{
					this.OnI_UnitChanging(value);
					this.SendPropertyChanging();
					this._I_Unit = value;
					this.SendPropertyChanged("I_Unit");
					this.OnI_UnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Wholesaleprice", DbType="Float")]
		public System.Nullable<double> I_Wholesaleprice
		{
			get
			{
				return this._I_Wholesaleprice;
			}
			set
			{
				if ((this._I_Wholesaleprice != value))
				{
					this.OnI_WholesalepriceChanging(value);
					this.SendPropertyChanging();
					this._I_Wholesaleprice = value;
					this.SendPropertyChanged("I_Wholesaleprice");
					this.OnI_WholesalepriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Tax", DbType="Float")]
		public System.Nullable<double> I_Tax
		{
			get
			{
				return this._I_Tax;
			}
			set
			{
				if ((this._I_Tax != value))
				{
					this.OnI_TaxChanging(value);
					this.SendPropertyChanging();
					this._I_Tax = value;
					this.SendPropertyChanged("I_Tax");
					this.OnI_TaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_sellingprice", DbType="Float")]
		public System.Nullable<double> I_sellingprice
		{
			get
			{
				return this._I_sellingprice;
			}
			set
			{
				if ((this._I_sellingprice != value))
				{
					this.OnI_sellingpriceChanging(value);
					this.SendPropertyChanging();
					this._I_sellingprice = value;
					this.SendPropertyChanged("I_sellingprice");
					this.OnI_sellingpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Date", DbType="Date")]
		public System.Nullable<System.DateTime> I_Date
		{
			get
			{
				return this._I_Date;
			}
			set
			{
				if ((this._I_Date != value))
				{
					this.OnI_DateChanging(value);
					this.SendPropertyChanging();
					this._I_Date = value;
					this.SendPropertyChanged("I_Date");
					this.OnI_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Discription", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary I_Discription
		{
			get
			{
				return this._I_Discription;
			}
			set
			{
				if ((this._I_Discription != value))
				{
					this.OnI_DiscriptionChanging(value);
					this.SendPropertyChanging();
					this._I_Discription = value;
					this.SendPropertyChanged("I_Discription");
					this.OnI_DiscriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Billing", Storage="_Billings", ThisKey="I_ID", OtherKey="I_ID")]
		public EntitySet<Billing> Billings
		{
			get
			{
				return this._Billings;
			}
			set
			{
				this._Billings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Company", Storage="_Companies", ThisKey="I_ID", OtherKey="I_ID")]
		public EntitySet<Company> Companies
		{
			get
			{
				return this._Companies;
			}
			set
			{
				this._Companies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Destroy_list", Storage="_Destroy_lists", ThisKey="I_ID", OtherKey="I_ID")]
		public EntitySet<Destroy_list> Destroy_lists
		{
			get
			{
				return this._Destroy_lists;
			}
			set
			{
				this._Destroy_lists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Offer", Storage="_Offers", ThisKey="I_ID", OtherKey="I_ID")]
		public EntitySet<Offer> Offers
		{
			get
			{
				return this._Offers;
			}
			set
			{
				this._Offers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Sale", Storage="_Sales", ThisKey="I_ID", OtherKey="I_ID")]
		public EntitySet<Sale> Sales
		{
			get
			{
				return this._Sales;
			}
			set
			{
				this._Sales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Item", Storage="_Company", ThisKey="Com_ID", OtherKey="Com_ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._Com_ID = value.Com_ID;
					}
					else
					{
						this._Com_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Billings(Billing entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_Billings(Billing entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_Companies(Company entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_Companies(Company entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_Destroy_lists(Destroy_list entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_Destroy_lists(Destroy_list entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_Offers(Offer entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_Offers(Offer entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_Sales(Sale entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_Sales(Sale entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login")]
	public partial class Login
	{
		
		private int _E_ID;
		
		private string _E_Username;
		
		private string _E_Password;
		
				
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_ID", DbType="Int NOT NULL")]
		public int E_ID
		{
			get
			{
				return this._E_ID;
			}
			set
			{
				if ((this._E_ID != value))
				{
					this._E_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string E_Username
		{
			get
			{
				return this._E_Username;
			}
			set
			{
				if ((this._E_Username != value))
				{
					this._E_Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string E_Password
		{
			get
			{
				return this._E_Password;
			}
			set
			{
				if ((this._E_Password != value))
				{
					this._E_Password = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Offers")]
	public partial class Offer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _O_ID;
		
		private System.Nullable<System.DateTime> _O_Startdate;
		
		private System.Nullable<System.DateTime> _O_Enddate;
		
		private System.Nullable<double> _O_Discount;
		
		private System.Nullable<double> _O_Quantity;
		
		private System.Nullable<double> _O_Netprofit;
		
		private System.Nullable<int> _I_ID;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnO_IDChanging(int value);
    partial void OnO_IDChanged();
    partial void OnO_StartdateChanging(System.Nullable<System.DateTime> value);
    partial void OnO_StartdateChanged();
    partial void OnO_EnddateChanging(System.Nullable<System.DateTime> value);
    partial void OnO_EnddateChanged();
    partial void OnO_DiscountChanging(System.Nullable<double> value);
    partial void OnO_DiscountChanged();
    partial void OnO_QuantityChanging(System.Nullable<double> value);
    partial void OnO_QuantityChanged();
    partial void OnO_NetprofitChanging(System.Nullable<double> value);
    partial void OnO_NetprofitChanged();
    partial void OnI_IDChanging(System.Nullable<int> value);
    partial void OnI_IDChanged();
    #endregion
		
		public Offer()
		{
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_O_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int O_ID
		{
			get
			{
				return this._O_ID;
			}
			set
			{
				if ((this._O_ID != value))
				{
					this.OnO_IDChanging(value);
					this.SendPropertyChanging();
					this._O_ID = value;
					this.SendPropertyChanged("O_ID");
					this.OnO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_O_Startdate", DbType="Date")]
		public System.Nullable<System.DateTime> O_Startdate
		{
			get
			{
				return this._O_Startdate;
			}
			set
			{
				if ((this._O_Startdate != value))
				{
					this.OnO_StartdateChanging(value);
					this.SendPropertyChanging();
					this._O_Startdate = value;
					this.SendPropertyChanged("O_Startdate");
					this.OnO_StartdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_O_Enddate", DbType="Date")]
		public System.Nullable<System.DateTime> O_Enddate
		{
			get
			{
				return this._O_Enddate;
			}
			set
			{
				if ((this._O_Enddate != value))
				{
					this.OnO_EnddateChanging(value);
					this.SendPropertyChanging();
					this._O_Enddate = value;
					this.SendPropertyChanged("O_Enddate");
					this.OnO_EnddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_O_Discount", DbType="Float")]
		public System.Nullable<double> O_Discount
		{
			get
			{
				return this._O_Discount;
			}
			set
			{
				if ((this._O_Discount != value))
				{
					this.OnO_DiscountChanging(value);
					this.SendPropertyChanging();
					this._O_Discount = value;
					this.SendPropertyChanged("O_Discount");
					this.OnO_DiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_O_Quantity", DbType="Float")]
		public System.Nullable<double> O_Quantity
		{
			get
			{
				return this._O_Quantity;
			}
			set
			{
				if ((this._O_Quantity != value))
				{
					this.OnO_QuantityChanging(value);
					this.SendPropertyChanging();
					this._O_Quantity = value;
					this.SendPropertyChanged("O_Quantity");
					this.OnO_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_O_Netprofit", DbType="Float")]
		public System.Nullable<double> O_Netprofit
		{
			get
			{
				return this._O_Netprofit;
			}
			set
			{
				if ((this._O_Netprofit != value))
				{
					this.OnO_NetprofitChanging(value);
					this.SendPropertyChanging();
					this._O_Netprofit = value;
					this.SendPropertyChanged("O_Netprofit");
					this.OnO_NetprofitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_ID", DbType="Int")]
		public System.Nullable<int> I_ID
		{
			get
			{
				return this._I_ID;
			}
			set
			{
				if ((this._I_ID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnI_IDChanging(value);
					this.SendPropertyChanging();
					this._I_ID = value;
					this.SendPropertyChanged("I_ID");
					this.OnI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Offer", Storage="_Item", ThisKey="I_ID", OtherKey="I_ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.Offers.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.Offers.Add(this);
						this._I_ID = value.I_ID;
					}
					else
					{
						this._I_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Return]")]
	public partial class Return
	{
		
		private System.Nullable<int> _I_ID;
		
		private string _I_Name;
		
		private System.Nullable<int> _I_Quantity;
		
		private System.Nullable<System.DateTime> _R_Date;
		
		public Return()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_ID", DbType="Int")]
		public System.Nullable<int> I_ID
		{
			get
			{
				return this._I_ID;
			}
			set
			{
				if ((this._I_ID != value))
				{
					this._I_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Name", DbType="VarChar(50)")]
		public string I_Name
		{
			get
			{
				return this._I_Name;
			}
			set
			{
				if ((this._I_Name != value))
				{
					this._I_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Quantity", DbType="Int")]
		public System.Nullable<int> I_Quantity
		{
			get
			{
				return this._I_Quantity;
			}
			set
			{
				if ((this._I_Quantity != value))
				{
					this._I_Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R_Date", DbType="Date")]
		public System.Nullable<System.DateTime> R_Date
		{
			get
			{
				return this._R_Date;
			}
			set
			{
				if ((this._R_Date != value))
				{
					this._R_Date = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sales")]
	public partial class Sale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _S_ID;
		
		private System.DateTime _S_Date;
		
		private System.Nullable<double> _S_Sum;
		
		private System.Nullable<double> _S_Netprofit;
		
		private System.Nullable<int> _I_ID;
		
		private string _I_Name;
		
		private System.Nullable<double> _I_Quantity;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnS_IDChanging(int value);
    partial void OnS_IDChanged();
    partial void OnS_DateChanging(System.DateTime value);
    partial void OnS_DateChanged();
    partial void OnS_SumChanging(System.Nullable<double> value);
    partial void OnS_SumChanged();
    partial void OnS_NetprofitChanging(System.Nullable<double> value);
    partial void OnS_NetprofitChanged();
    partial void OnI_IDChanging(System.Nullable<int> value);
    partial void OnI_IDChanged();
    partial void OnI_NameChanging(string value);
    partial void OnI_NameChanged();
    partial void OnI_QuantityChanging(System.Nullable<double> value);
    partial void OnI_QuantityChanged();
    #endregion
		
		public Sale()
		{
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int S_ID
		{
			get
			{
				return this._S_ID;
			}
			set
			{
				if ((this._S_ID != value))
				{
					this.OnS_IDChanging(value);
					this.SendPropertyChanging();
					this._S_ID = value;
					this.SendPropertyChanged("S_ID");
					this.OnS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_Date", DbType="Date NOT NULL")]
		public System.DateTime S_Date
		{
			get
			{
				return this._S_Date;
			}
			set
			{
				if ((this._S_Date != value))
				{
					this.OnS_DateChanging(value);
					this.SendPropertyChanging();
					this._S_Date = value;
					this.SendPropertyChanged("S_Date");
					this.OnS_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_Sum", DbType="Float")]
		public System.Nullable<double> S_Sum
		{
			get
			{
				return this._S_Sum;
			}
			set
			{
				if ((this._S_Sum != value))
				{
					this.OnS_SumChanging(value);
					this.SendPropertyChanging();
					this._S_Sum = value;
					this.SendPropertyChanged("S_Sum");
					this.OnS_SumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_Netprofit", DbType="Float")]
		public System.Nullable<double> S_Netprofit
		{
			get
			{
				return this._S_Netprofit;
			}
			set
			{
				if ((this._S_Netprofit != value))
				{
					this.OnS_NetprofitChanging(value);
					this.SendPropertyChanging();
					this._S_Netprofit = value;
					this.SendPropertyChanged("S_Netprofit");
					this.OnS_NetprofitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_ID", DbType="Int")]
		public System.Nullable<int> I_ID
		{
			get
			{
				return this._I_ID;
			}
			set
			{
				if ((this._I_ID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnI_IDChanging(value);
					this.SendPropertyChanging();
					this._I_ID = value;
					this.SendPropertyChanged("I_ID");
					this.OnI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Name", DbType="VarChar(50)")]
		public string I_Name
		{
			get
			{
				return this._I_Name;
			}
			set
			{
				if ((this._I_Name != value))
				{
					this.OnI_NameChanging(value);
					this.SendPropertyChanging();
					this._I_Name = value;
					this.SendPropertyChanged("I_Name");
					this.OnI_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Quantity", DbType="Float")]
		public System.Nullable<double> I_Quantity
		{
			get
			{
				return this._I_Quantity;
			}
			set
			{
				if ((this._I_Quantity != value))
				{
					this.OnI_QuantityChanging(value);
					this.SendPropertyChanging();
					this._I_Quantity = value;
					this.SendPropertyChanged("I_Quantity");
					this.OnI_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Sale", Storage="_Item", ThisKey="I_ID", OtherKey="I_ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.Sales.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.Sales.Add(this);
						this._I_ID = value.I_ID;
					}
					else
					{
						this._I_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Visa")]
	public partial class Visa
	{
		
		private System.Nullable<int> _B_ID;
		
		private System.Nullable<double> _B_Amount;
		
		private System.Nullable<System.DateTime> _B_Date;
		
		private System.Nullable<System.TimeSpan> _B_Time;
		
		private string _Cashier;
		
		public Visa()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_ID", DbType="Int")]
		public System.Nullable<int> B_ID
		{
			get
			{
				return this._B_ID;
			}
			set
			{
				if ((this._B_ID != value))
				{
					this._B_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_Amount", DbType="Float")]
		public System.Nullable<double> B_Amount
		{
			get
			{
				return this._B_Amount;
			}
			set
			{
				if ((this._B_Amount != value))
				{
					this._B_Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_Date", DbType="Date")]
		public System.Nullable<System.DateTime> B_Date
		{
			get
			{
				return this._B_Date;
			}
			set
			{
				if ((this._B_Date != value))
				{
					this._B_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_Time", DbType="Time")]
		public System.Nullable<System.TimeSpan> B_Time
		{
			get
			{
				return this._B_Time;
			}
			set
			{
				if ((this._B_Time != value))
				{
					this._B_Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cashier", DbType="VarChar(50)")]
		public string Cashier
		{
			get
			{
				return this._Cashier;
			}
			set
			{
				if ((this._Cashier != value))
				{
					this._Cashier = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
